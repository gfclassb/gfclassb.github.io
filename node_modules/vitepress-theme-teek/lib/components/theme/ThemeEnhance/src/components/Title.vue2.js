'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var namespace = require('../namespace.js');
var index_vue_vue_type_script_setup_true_name_Icon_lang = require('../../../../common/Icon/src/index.vue2.js');
require('@iconify/vue');

const _hoisted_1 = { key: 0 };
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "Title",
  props: {
    title: {},
    disabled: { type: Boolean },
    icon: {}
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock(
        "div",
        {
          class: Vue.normalizeClass([Vue.unref(namespace.ns).e("title"), Vue.unref(namespace.ns).is("disabled", !!_ctx.disabled)])
        },
        [
          Vue.renderSlot(_ctx.$slots, "icon", {}, () => [
            _ctx.icon ? (Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_Icon_lang.default), {
              key: 0,
              icon: _ctx.icon,
              size: 16
            }, null, 8, ["icon"])) : Vue.createCommentVNode("v-if", true)
          ]),
          Vue.renderSlot(_ctx.$slots, "default", {}, () => [
            _ctx.title ? (Vue.openBlock(), Vue.createElementBlock(
              "span",
              _hoisted_1,
              Vue.toDisplayString(_ctx.title),
              1
              /* TEXT */
            )) : Vue.createCommentVNode("v-if", true)
          ])
        ],
        2
        /* CLASS */
      );
    };
  }
});

exports.default = _sfc_main;
