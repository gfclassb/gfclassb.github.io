'use strict';

var vitepress = require('vitepress');
var Vue = require('vue');

const useViewTransition = (duration = 300, easing = "ease-in") => {
  const { isDark, theme } = vitepress.useData();
  const isOpenViewTransition = theme.value.viewTransition ?? true;
  if (!isOpenViewTransition) return;
  const enableTransitions = () => "startViewTransition" in document && window.matchMedia("(prefers-reduced-motion: no-preference)").matches;
  Vue.provide("toggle-appearance", async ({ clientX: x, clientY: y }) => {
    if (!enableTransitions()) {
      isDark.value = !isDark.value;
      return;
    }
    const clipPath = [
      `circle(0px at ${x}px ${y}px)`,
      `circle(${Math.hypot(Math.max(x, innerWidth - x), Math.max(y, innerHeight - y))}px at ${x}px ${y}px)`
    ];
    await document.startViewTransition(async () => {
      isDark.value = !isDark.value;
      await Vue.nextTick();
    }).ready;
    document.documentElement.animate(
      { clipPath: isDark.value ? clipPath.reverse() : clipPath },
      {
        duration,
        easing,
        pseudoElement: `::view-transition-${isDark.value ? "old" : "new"}(root)`
      }
    );
  });
};

exports.useViewTransition = useViewTransition;
