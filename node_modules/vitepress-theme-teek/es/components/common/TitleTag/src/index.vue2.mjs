import { defineComponent, createElementBlock, createCommentVNode, openBlock, normalizeClass, unref, renderSlot, createTextVNode, toDisplayString } from 'vue';
import 'vitepress';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import '../../../../composables/useZIndex.mjs';

var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "TitleTag" },
  __name: "index",
  props: {
    text: {},
    type: {},
    position: {},
    size: {}
  },
  setup(__props) {
    const ns = useNamespace("title-tag");
    return (_ctx, _cache) => {
      return _ctx.text || _ctx.$slots.default ? (openBlock(), createElementBlock(
        "span",
        {
          key: 0,
          class: normalizeClass([unref(ns).b(), _ctx.type && unref(ns).m(_ctx.type), _ctx.position && unref(ns).m(_ctx.position), _ctx.size && unref(ns).m(_ctx.size)])
        },
        [
          renderSlot(_ctx.$slots, "default", {}, () => [
            createTextVNode(
              toDisplayString(_ctx.text),
              1
              /* TEXT */
            )
          ])
        ],
        2
        /* CLASS */
      )) : createCommentVNode("v-if", true);
    };
  }
});

export { _sfc_main as default };
